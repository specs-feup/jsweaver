import weaver.jp.CallJp;
import weaver.Weaver;

_lara_dummy_ = Object.defineProperty(CallJp.prototype, 'name', {
	get: function () {  
	
		return CallJp._getName(this.astNode);
	}
});

_lara_dummy_ = Object.defineProperty(CallJp.prototype, 'function', {
	get: function () {
		return Query.search("function",this.name).first();
	}
});

/**
 * Implements 'name', when its a memberExpression, returns the 
 */
 
CallJp._getName = function(astNode) {

		var callJp = Ast.toWeaverJoinPoint(astNode);

		if(callJp.instanceOf("identifier")) {
				return callJp.name;
		}

		if(callJp.instanceOf("memberExpression")) {
				return callJp.property.name;
		}
		
		if(callJp.instanceOf("callExpression")) {
			return CallJp._getName(callJp.callee.getNode());
		}


}
