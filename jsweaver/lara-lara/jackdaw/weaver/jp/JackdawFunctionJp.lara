import weaver.jp.FunctionJp;
import weaver.Weaver;

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'id', {
	get: function () { 
		return this.name; 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'name', {
	get: function () {  
		var functionIdentifier = this.astNode.get("id");
		if(functionIdentifier.isJsonNull())
			return "<Anonymous function>"; 
		return functionIdentifier.get("name").getAsString(); 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'signature', {
	get: function () {
		var paramsList = this.params.map(param => param.name).join(",");   
		return "function " + this.name + "(" + paramsList +")"; 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'params', {
	get: function () {
		var params = this.astNode.get("params");  
		return CommonJoinPoints.toJoinPoints(Weaver.toJs(params));
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'hasBody', {
	get: function () {  	
		return true; 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'stmts', {
	get: function () {
		if(this.hasBody){
			var functionBody = this.astNode.get("body");
			var functionStmts = functionBody.get("body");
			return CommonJoinPoints.toJoinPoints(Weaver.toJs(functionStmts));
		}
		return []; 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'isAnonymous', {
	get: function () {
		return this.astNode.get("type").getAsString() === "FunctionExpression"; 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'isDeclarative', {
	get: function () {
		for(child of this.stmts)
			if(child.astNode.get("type").getAsString() !== "ExpressionStatement" &&
				child.astNode.get("type").getAsString() !== "VariableDeclaration")
				return false;
		return true;
		
		
	}
});